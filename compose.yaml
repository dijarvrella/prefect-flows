version: '3'

services:
  prefect-server:
    image: dijarvrella444/prefect-base:latest
    environment:
      - PREFECT_API_URL=http://localhost:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_NODE_TYPE=server
    ports:
      - "4200-4201:4200-4201"
    command: prefect server start
  prefect-worker:
    image: dijarvrella444/prefect-base:latest
    network_mode: "host"
    environment:
      - PREFECT_API_URL=http://10.3.0.4:4200/api
      - PREFECT_NODE_TYPE=worker
    command: prefect worker start --pool "seedoo-custom-worker" --type "docker"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  prefect-dev-server:
    image: dijarvrella444/prefect-base:latest
    environment:
      - PREFECT_API_URL
      - PREFECT_SERVER_API_HOST
      - PREFECT_NODE_TYPE
      - BASE_JOB_TEMPLATE_PATH
      - WORK_POOL_NAME
      - WORK_POOL_TYPE
      - DOCKER_USERNAME
      - DOCKER_PASSWORD
      #- PREFECT_DEBUG_MODE=1
    ports:
      - "4220-4221:4200-4201"
    command: >
      /bin/sh -c "prefect server start & sleep 20 &&
      apt update && apt install -y curl jq &&
      chmod +x bootstrap.sh && ./bootstrap.sh && sleep 10 &&
      prefect work-pool create \"$WORK_POOL_NAME\" --type \"$WORK_POOL_TYPE\" && sleep 10 &&
      prefect work-pool update \"$WORK_POOL_NAME\" --base-job-template \"$BASE_JOB_TEMPLATE_PATH\" &&
      prefect deploy -n train_flow -p seedoo-custom-worker-1 flow.py:pull_and_run_image & wait"
    volumes:
      - /home/seedoo/dijar-kickoff/prefect/marvin/worker-dev-base-job-template.yaml:/opt/prefect/worker-dev-base-job-template.yaml
      - /home/seedoo/dijar-kickoff/prefect/marvin/bootstrap.sh:/opt/prefect/bootstrap.sh
  prefect-dev-worker:
    image: dijarvrella444/prefect-base:latest
    network_mode: "host"
    environment:
      - PREFECT_API_URL=http://10.3.0.4:4220/api
      - PREFECT_NODE_TYPE=worker
      #- PREFECT_DEBUG_MODE=1
    command: prefect worker start --pool "seedoo-custom-worker-1" --type "docker"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock